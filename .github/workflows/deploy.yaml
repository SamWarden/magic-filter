name: Deploy

on:
  push:
    tags:
      - 'v*'
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.0
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Build
        run: |
          poetry build

      - name: Try install wheel
        run: |
          mkdir -p try_install
          cd try_install
          python -m venv venv
          venv/bin/pip install ../dist/magic_filter-*.whl
          venv/bin/python -c "import magic_filter; print(magic_filter)"

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*

  publish:
    name: Publish
    needs: build
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: wheels
          path: dist

      - name: Publish a Python distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event.action != 'published'
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event.action == 'published'
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
